// Generated by CoffeeScript 1.10.0
(function() {
  var BaseClass, Chat,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  BaseClass = require('./common/base_class');

  Chat = (function(superClass) {
    extend(Chat, superClass);

    function Chat() {
      return Chat.__super__.constructor.apply(this, arguments);
    }

    Chat.prototype.endpoints = {
      "delete": '/api/chat.delete',
      postMessage: '/api/chat.postMessage',
      update: '/api/chat.update'
    };

    Chat.prototype["delete"] = function(opts, callback) {
      if (opts == null) {
        opts = {};
      }
      this.validate.obj(opts, ['ts', 'channel']);
      return this.request('POST', this.endpoints["delete"], opts, callback);
    };

    Chat.prototype.postMessage = function(opts, callback) {
      if (opts == null) {
        opts = {};
      }
      this.validate.obj(opts, ['channel', 'text']);
      return this.request('POST', this.endpoints.postMessage, opts, callback);
    };

    Chat.prototype.update = function(opts, callback) {
      if (opts == null) {
        opts = {};
      }
      this.validate.obj(opts, ['ts', 'channel', 'text']);
      return this.request('POST', this.endpoints.update, opts, callback);
    };

    return Chat;

  })(BaseClass);

  module.exports = Chat;

}).call(this);
