// Generated by CoffeeScript 1.10.0
(function() {
  var BaseClass, IM,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  BaseClass = require('./common/base_class');

  IM = (function(superClass) {
    extend(IM, superClass);

    function IM() {
      return IM.__super__.constructor.apply(this, arguments);
    }

    IM.prototype.endpoints = {
      close: '/api/im.close',
      history: '/api/im.history',
      list: '/api/im.list',
      mark: '/api/im.mark',
      open: '/api/im.open'
    };

    IM.prototype.close = function(opts, callback) {
      if (opts == null) {
        opts = {};
      }
      this.validate.obj(opts, ['channel']);
      return this.request('POST', this.endpoints.close, opts, callback);
    };

    IM.prototype.history = function(opts, callback) {
      if (opts == null) {
        opts = {};
      }
      this.validate.obj(opts, ['channel']);
      return this.request('GET', this.endpoints.history, opts, callback);
    };

    IM.prototype.list = function(callback) {
      return this.request('GET', this.endpoints.list, {}, callback);
    };

    IM.prototype.mark = function(opts, callback) {
      if (opts == null) {
        opts = {};
      }
      this.validate.obj(opts, ['channel', 'ts']);
      return this.request('POST', this.endpoints.mark, opts, callback);
    };

    IM.prototype.open = function(opts, callback) {
      if (opts == null) {
        opts = {};
      }
      this.validate.obj(opts, ['user']);
      return this.request('POST', this.endpoints.open, opts, callback);
    };

    return IM;

  })(BaseClass);

  module.exports = IM;

}).call(this);
